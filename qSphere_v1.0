//Selecet sphere radius 
float $sk_sphereR = 30;      /*Sphere radius chooser*/ 

//Selecet smooth divisions
int $sk_SmoothD = 3;         /*Smooth divisions chooser*/    /*     */    /* 0-6    1-24    2-96    3-384    4-1536    5-6144    6-... */  

//UV value
int $sk_cubeUV = 0;          /* 0 - UV off */    /* 1 - UV on */

//Sphere radius default value
int $sk_sphereRdefaultV = 30;

//BLOCKING divisions value
int $sk_blockSmoothD = 6; /*Blocking value, protection of crashing system*/ //recommended 6-8

//UVs value default value
int $sk_UVsOn = 1; 
int $sk_UVsOff = 0;

//Messages
string $sk_incorrectRadiusM = "Sphere radius <hl>Incorrect value</hl>, return to <span style=\"color:#ff3838;\">default</span> value ";
string $sk_blockSmoothM = "Divisions <hl>Value is blocked</hl>, protection of crashing system, return to <span style=\"color:#ff3838;\">default</span> value";
string $sk_incorrectUVsMon = "UVs <hl>Incorrect value</hl>, return to <span style=\"color:#ff3838;\">default</span> value UV's <hl>On</hl>";
string $sk_incorrectUVsMoff = "UVs <hl>Incorrect value</hl>, return to <span style=\"color:#ff3838;\">default</span> value UV's <hl>Off</hl>";

//Sphere radius value checker
        if ($sk_sphereR < 0 )
        {
        $sk_sphereR = $sk_sphereRdefaultV; //default value
        inViewMessage -smg ($sk_incorrectRadiusM) -fade -pos midCenter;
        }
        else
        {
        print " Correct sphere radius ";
        }
print $sk_sphereR;

//Smooth divisions value checker
        if ($sk_SmoothD >= $sk_blockSmoothD)
        {
        $sk_SmoothD = 3; //default value
        inViewMessage -smg ($sk_blockSmoothM) -fade -pos midCenter;
        }
        else if ($sk_SmoothD < 0)
        {
        $sk_SmoothD = 3; //default value
        inViewMessage -smg ($sk_blockSmoothM) -fade -pos midCenter;
        }
        else
        {
        print " Safe smooth divisions ";
        }      
print $sk_SmoothD;

//UVs value checker
        if ($sk_cubeUV > 1)
        {
        $sk_cubeUV = $sk_UVsOn ; //default value
        inViewMessage -smg ($sk_incorrectUVsMon) -fade -pos midCenter;
        }
        else if ($sk_cubeUV < 0)
        {
        $sk_cubeUV = $sk_UVsOff; //default value
        inViewMessage -smg ($sk_incorrectUVsMoff) -fade -pos midCenter;
        }
        else
        {
        print " Correct UVs value ";
        }      
print $sk_cubeUV;
 
//Sphere quality
int $sk_sphereQ = 60; /*recommended 50-70*/ 
       
//Sphere size calculation
int $sk_sphereS = $sk_SmoothD * $sk_sphereQ;
          
//Coefficient value
float $sk_coefficientvalue = 2.3; /*recommended 2.3*/ 
    
//Cube size calculation
float $sk_cubeHWD = $sk_sphereR * $sk_coefficientvalue;
      
//Type object name
string $sk_quadsphereN = "qSphere1";
string $sk_cubeN = "sk_qsCube";
string $sk_sphereN = "sk_qsSphere";
string $sk_printqsN = "quad_sphere_created";
    
//Create geometry
polySphere -r $sk_sphereR -sx $sk_sphereS  -sy $sk_sphereS  -n $sk_sphereN;
polyCube -w $sk_cubeHWD -h $sk_cubeHWD -d $sk_cubeHWD -n $sk_cubeN;
    
//Create UV   
        if ($sk_cubeUV == 1) /*1-ON UV*/  
        {
        select -r sk_qsCube;
        CutUVs;   
        }
        else if ($sk_cubeUV<= 0) /*0-OFF UV*/ 
        {
        select -r sk_qsCube;
        DeleteUVs;   
        }
           
//Smooth cube
select -r sk_qsCube;
polySmooth  -mth 0 -sdt 2 -ovb 1 -ofb 3 -ofc 0 -ost 0 -ocr 0 -dv $sk_SmoothD -peh 0 -bnr 1 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1;
    
//Transfer attributes
select -r sk_qsSphere;
select -add sk_qsCube;
transferAttributes -transferPositions 1;
DeleteHistory;
    
//Delete history, geometry and rename, unfold
select -r sk_qsSphere; 
doDelete;
select -r sk_qsCube;
rename  $sk_quadsphereN;
            if ($sk_cubeUV == 1) 
            {
            u3dUnfold -ite 1 -p 0 -bi 1 -tf 1 -ms 32 -rs 0;     /*you can resolishion changes (it is  made  for speed)*/ // change "command" for old version Maya
            u3dLayout -res 32 -scl 1 -box 0 1 0 1;              /*you can resolishion changes (it is  made  for speed)*/ // change "command" for old version Maya
            }
DeleteHistory; 
      
//Print
print $sk_printqsN;  